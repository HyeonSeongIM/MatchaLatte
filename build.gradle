plugins {
    id 'java-library'
    id 'org.springframework.boot' apply(false)
    id 'io.spring.dependency-management'
    id 'io.spring.javaformat' apply(false)
    id 'org.asciidoctor.jvm.convert' apply(false)
}

apply from: 'lint.gradle'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = project.javaVersion

    repositories {
        mavenCentral()
    }

}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.jvm.convert'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
        }
    }

    dependencies {
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        testImplementation 'org.springframework.security:spring-security-test'
    }

    bootJar.enabled = false
    jar.enabled = true

    var snippetsDir = file("build/generated-snippets")

    test {
        group = 'verification'
        useJUnitPlatform()
        outputs.dir snippetsDir
    }

    tasks.named('unitTest', Test){
        group = 'verification'
        useJUnitPlatform()
    }

    tasks.named('contextTest', Test) {
        group = 'verification'
        useJUnitPlatform()
    }

    tasks.named('restDocs', Test) {
        group = 'verification'
        useJUnitPlatform()
    }

    tasks.named('asciidoctor', Test) {
        inputs.dir snippetsDir
        dependsOn test
    }

}